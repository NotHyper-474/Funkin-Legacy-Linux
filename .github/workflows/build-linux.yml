name: x64 Linux Build
on: workflow_dispatch
jobs:
  build:
    name: Linux Build
    runs-on: ubuntu-20.04 # Distro with at least an suitable GLibC version
    permissions: write-all
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true # IMPORTANT!

      - name: Restore Cache Files
        id: restore-cache
        uses: actions/cache@v4.2.3
        with:
          path: |
            .haxelib
            export/release/linux/haxe
            export/release/linux/obj
          key: funkin-cache-linux

      - name: Setup Haxe environment
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install VLC dependencies
        run: |
            sudo apt-get update
            sudo apt-get install libvlc-dev libvlccore-dev

      # This custom hmm is necessary for --quiet to work with reinstall command
      # Also why reinstall? Because the cache sometimes gets corrupted and causes Haxe/Lime to recompile everything from scratch
      - name: Setup Haxe libraries
        run: |
          haxelib git hmm https://github.com/NotHyper-474/hmm.git b742bb114aa84d1b277a318ffd30e93833986bfb --quiet
          haxelib run hmm setup --quiet
          haxelib run hmm reinstall --quiet
          cd $(haxelib libpath hxcpp)/tools/hxcpp
          haxe compile.hxml
          cd ../../../..
          

      - name: Build Game
        run: haxelib run lime build linux

      - name: Pack to Tar
        run: tar -czvf funkin-linux-64bit-unofficial.tar.gz -C export/release/linux/bin .

      - name: Upload!
        uses: actions/upload-artifact@v4
        with:
          name: linuxBuild64
          path: funkin-linux-64bit-unofficial.tar.gz
          if-no-files-found: error

      # Thanks to https://stackoverflow.com/a/73556714 for the code!
      - name: Clear cache
        uses: actions/github-script@v6
        with:
          script: |
            console.log("About to clear")
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              console.log(cache)
              github.rest.actions.deleteActionsCacheById({
                owner: context.repo.owner,
                repo: context.repo.repo,
                cache_id: cache.id,
              })
            }
            console.log("Clear completed")

      - name: Save Compiled Data
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: |
            .haxelib
            export/release/linux/haxe
            export/release/linux/obj
          key: funkin-cache-linux
